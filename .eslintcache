[{"/mnt/c/projects/p38todo/src/index.js":"1","/mnt/c/projects/p38todo/src/App.js":"2","/mnt/c/projects/p38todo/src/components/Project/Project.js":"3","/mnt/c/projects/p38todo/src/components/AddProjectPanel/AddProjectPanel.js":"4","/mnt/c/projects/p38todo/src/components/ProjectList/ProjectsList.js":"5","/mnt/c/projects/p38todo/src/utils/inArrayPositionChange.js":"6","/mnt/c/projects/p38todo/src/context.js":"7","/mnt/c/projects/p38todo/src/components/ButtonHuge/ButtonHuge.js":"8"},{"size":233,"mtime":1611744063136,"results":"9","hashOfConfig":"10"},{"size":3511,"mtime":1611930248751,"results":"11","hashOfConfig":"10"},{"size":2646,"mtime":1611927228557,"results":"12","hashOfConfig":"10"},{"size":713,"mtime":1612168124741,"results":"13","hashOfConfig":"10"},{"size":398,"mtime":1611924996002,"results":"14","hashOfConfig":"10"},{"size":503,"mtime":1611847043338,"results":"15","hashOfConfig":"10"},{"size":103,"mtime":1611912329620,"results":"16","hashOfConfig":"10"},{"size":349,"mtime":1611930715554,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"a0u6h9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/mnt/c/projects/p38todo/src/index.js",[],["38","39"],"/mnt/c/projects/p38todo/src/App.js",["40"],"import React from \"react\";\nimport AppContext from \"./context\";\n\nimport ButtonHuge from \"../src/components/ButtonHuge/ButtonHuge\";\nimport AddProjectPanel from \"./components/AddProjectPanel/AddProjectPanel\";\nimport ProjectList from \"./components/ProjectList/ProjectsList\";\nimport { inArrayPositionChange } from \"./utils/inArrayPositionChange\";\nclass AddRemoveListItem extends React.Component {\n  state = {\n    project: [\n      {\n        id: 0,\n        name: \"Dodanie aplikacji todo do portfolio\",\n        value: 1,\n        active: false,\n        phase: \"iideas\",\n      },\n      {\n        id: 1,\n        name: \"Zmodyfikowanie portfolio aby pokazywać drobne aktywności\",\n        value: 2,\n        active: false,\n        phase: \"ideas\",\n      },\n      {\n        id: 2,\n        name: \"Przerobić stronę CV w stronę ogólnego bloga\",\n        value: 3,\n        active: false,\n        phase: \"ideas\",\n      },\n      {\n        id: 3,\n        name: \"Przygotować arkusz ogólny pod prognozy\",\n        value: 4,\n        active: false,\n        phase: \"ideas\",\n      },\n    ],\n    newProject: { name: \"\" },\n    // currentId: 10,\n    newProjectPanelOpen: false,\n    changeProjectName: (id, name) => this.changeProjectName(id, name),\n    deleteProject: (id) => this.deleteProject(id),\n    changeProjectPosition: (arr, id, direction) =>\n      this.changeProjectPosition(arr, id, direction),\n    switchNewProjectPanel: () => this.switchNewProjectPanel(),\n  };\n\n  changeProjectName = (id, name) => {\n    console.log(\"id: \", id, \"name: \", name);\n    const projectBase = this.state.project;\n    const foundIndex = projectBase.findIndex((x) => x.id == id);\n    projectBase[foundIndex].name = name;\n    this.setState({ project: projectBase });\n  };\n\n  deleteProject = (id) => {\n    // const newProjectBase = this.state.project.filter((ele) => ele.id != id);\n    const newProjectBase = this.state.project;\n    newProjectBase.splice(id, 1);\n    this.setState({ project: newProjectBase });\n  };\n\n  changeProjectPosition = (arr, index, direction) => {\n    console.log(arr[index].name, \"index: \", index, \"Direction: \", direction);\n    const newProjectOrder = inArrayPositionChange(arr, index, direction);\n    this.setState({ project: newProjectOrder });\n  };\n\n  switchNewProjectPanel = () =>\n    this.setState((prevState) => ({\n      newProjectPanelOpen: !prevState.newProjectPanelOpen,\n    }));\n\n  handleInputChange = (e) =>\n    this.setState({\n      newProject: [\n        {\n          id: this.state.currentId,\n          name: e.target.value,\n          value: 0,\n          active: false,\n          phase: \"initial\",\n        },\n      ],\n    });\n\n  handleAddItem = () =>\n    this.setState((prevState) => ({\n      project: prevState.project.concat(this.state.newProject),\n      newProject: { name: \"\" },\n      currentId: prevState.currentId + 1,\n    }));\n\n  render() {\n    return (\n      <AppContext.Provider value={this.state}>\n        {this.state.newProjectPanelOpen && <AddProjectPanel />}\n        <div style={{ padding: \"30px\" }}>\n          <h1>Todo APP</h1>\n          <ButtonHuge onClick={this.switchNewProjectPanel}>+</ButtonHuge>\n          {/* <AddProjectPanel\n            inputValue={this.state.newProject.name}\n            inputChange={this.handleInputChange}\n            addProject={this.handleAddItem}\n          /> */}\n          <div style={{ display: \"flex\" }}>\n            <ProjectList list={this.state.project} />\n          </div>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default AddRemoveListItem;\n","/mnt/c/projects/p38todo/src/components/Project/Project.js",[],"/mnt/c/projects/p38todo/src/components/AddProjectPanel/AddProjectPanel.js",["41"],"/mnt/c/projects/p38todo/src/components/ProjectList/ProjectsList.js",["42","43"],"import React, { useState, useEfect } from \"react\";\r\nimport Project from \"../Project/Project\";\r\n\r\nconst ProjectList = ({ list }) => {\r\n  return (\r\n    <div>\r\n      <h2>Taskkk</h2>\r\n      <ul style={{ padding: 0 }}>\r\n        {list.map((item, index) => (\r\n          <Project key={index} index={index} name={item.name} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","/mnt/c/projects/p38todo/src/utils/inArrayPositionChange.js",[],"/mnt/c/projects/p38todo/src/context.js",[],"/mnt/c/projects/p38todo/src/components/ButtonHuge/ButtonHuge.js",["44"],"import React, { useState } from \"react\";\r\nimport style from \"./ButtonHuge.module.scss\";\r\n\r\nconst AddProjectPanel = ({ onClick, children, className }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={style.addButton.concat(\" \", className)}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddProjectPanel;\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":53,"column":58,"nodeType":"51","messageId":"52","endLine":53,"endColumn":60},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEfect' is defined but never used.","no-global-assign","no-unsafe-negation"]